@inherits AppComponentBase;

@inject IAppFacade Facade;

<MudTable Class="guids-table" Items="@_items" @bind-SelectedItem="@_selectedItem"
          EditTrigger="TableEditTrigger.EditButton" RowClassFunc="@CalculateRowClass"
          Height="calc(100vh - 168.5px)"
          RowEditPreview="OnBeforeEdit"
          RowEditCancel="OnEditCancel"
          RowEditCommit="OnEditCommit"
          FixedHeader Virtualize Dense Hover CanCancelEdit SelectOnRowClick>
    <ToolBarContent>
        <MudButtonGroup Variant="Variant.Filled">
            <MudButton OnClick="Facade.AddGuid">Add Guid</MudButton>
            <MudButton OnClick="@OnRemoveGuidClick">Remove Guid</MudButton>
        </MudButtonGroup>
        <MudSpacer />
    </ToolBarContent>
    <ColGroup>
        <col style="width: 40%;"/>
        <col style="width: 30%;"/>
        <col style="width: 30%;"/>
        <col style="width: 8px;"/>
    </ColGroup>
    <HeaderContent>
        <MudTh>Name</MudTh>
        <MudTh>Retail GUID</MudTh>
        <MudTh>Mod GUID</MudTh>
    </HeaderContent>
    <RowTemplate>
        <MudTd DataLabel="Name">
            <MudText Style="overflow-wrap: anywhere">@context!.Name</MudText>
        </MudTd>
        <MudTd DataLabel="Retail GUID">
            <MudText Style="overflow-wrap: anywhere">@context!.RetailGuid.ToString("N")</MudText>
        </MudTd>
        <MudTd DataLabel="Mod GUID">
            <MudText Style="overflow-wrap: anywhere">@context!.ModdedGuid.ToString("N")</MudText>
        </MudTd>
    </RowTemplate>
    <RowEditingTemplate>
        <MudTd DataLabel="Name">
            <MudTextField @bind-Value="@context!.Name" Required>@context.Name</MudTextField>
        </MudTd>
        <MudTd DataLabel="Retail GUID">
            <MudTextField T="Guid" @bind-Value="@context!.RetailGuid" Required>@context.RetailGuid.ToString("N")</MudTextField>
        </MudTd>
        <MudTd DataLabel="Mod GUID">
            <MudTextField T="Guid" @bind-Value="@context!.ModdedGuid" Required>@context.ModdedGuid.ToString("N")</MudTextField>
        </MudTd>
    </RowEditingTemplate>
</MudTable>

@code
{
    private IReadOnlyCollection<GuidRow> _items = Array.Empty<GuidRow>();

    private GuidRow? _selectedItem;

    private GuidRow? _tempItem;

    protected override void OnInitialized()
    {
        base.OnInitialized();

        Facade.OnAppStateChanged += UpdateItems;
        
        UpdateItems();
    }

    private void UpdateItems()
    {
        _items = Facade.GetGuids().Select(guid => new GuidRow
        {
            Id = guid.Id,
            Name = guid.Name,
            RetailGuid = guid.RetailGuid,
            ModdedGuid = guid.ModdedGuid
        })
        .ToArray();

        UpdateView();
    }

    public void Dispose()
    {
        Facade.OnAppStateChanged -= UpdateItems;
    }

    private string CalculateRowClass(GuidRow? currentRow, int rowNumber)
    {
        return _selectedItem != null && _selectedItem.Id == currentRow?.Id ? "selected" : string.Empty;
    }

    private void OnRemoveGuidClick()
    {
        Facade.RemoveGuid(_selectedItem?.Id);
    }

    private void OnBeforeEdit(object item)
    {
        _tempItem = item as GuidRow;
    }

    private void OnEditCancel(object item)
    {
        var guidData = item as GuidRow;

        guidData!.Name = _tempItem!.Name;
        guidData!.RetailGuid = _tempItem!.RetailGuid;
        guidData!.ModdedGuid = _tempItem!.ModdedGuid;
    }

    private void OnEditCommit(object item)
    {
        var guidData = item as GuidRow;

        Facade.UpdateGuid(new GuidState
        {
            Id = guidData.Id,
            Name = guidData.Name,
            RetailGuid = guidData.RetailGuid,
            ModdedGuid = guidData.ModdedGuid
        });
    }
}
